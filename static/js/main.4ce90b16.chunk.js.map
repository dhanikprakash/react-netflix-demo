{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","handleClick","movie","a","get","id","trailerurl","data","results","key","useEffect","request","fetchData","className","map","src","poster_path","backdrop_path","alt","name","onClick","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substring","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ce90b16.chunk.js","sourcesContent":["\nimport axios from \"axios\";\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  // Options for react-youtube\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            className={`row__poster ${isLargeRow && \"row__PosterLarge\"}`}\n            key={movie.id}\n            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n            alt={movie.name}\n            onClick={() => handleClick(movie)}\n          />\n        ))}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","    const API_KEY = \"3c69e3bd45756a00c3556314a9f6938e\";\n    const requests = {\n        fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n        fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\n        fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n        fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\n        fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\n        fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\n        fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n        fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    }\n\n\n    export default requests;","import React, { useState, useEffect } from 'react';\nimport axios from \"../axios\";\nimport requests from \"../requests\";\nimport \"./Banner.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n            ]);\n            return request;\n        }\n        fetchData();\n    }, [])\n    function truncate(str, n) {\n        return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\n    }\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\"${base_url}${movie?.backdrop_path}\")`,\n                backgroundPosition: \"center center\",\n            }}>\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play </button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">{truncate(movie?.overview, 300)}</h1>\n            </div>\n            <div className=\"class_fadeBottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\nimport \"./Nav.css\"\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true)\n            }\n            else {\n                handleShow(false);\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, [])\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img\n                className=\"nav__logo\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n                alt=\"Netflix Logo\"\n            ></img>\n            <img\n                className=\"nav__avatar\"\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n                alt=\"Netflix Logo\"\n            ></img>\n        </div>\n    )\n}\n\nexport default Nav\n","import React from \"react\";\nimport './App.css';\nimport Row from \"./components/Row\";\nimport requests from \"./requests\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals} isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchTrending} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}